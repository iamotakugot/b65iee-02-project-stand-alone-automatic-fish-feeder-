// RELAY FIX PATCH for main.cpp
// แทนที่ฟังก์ชัน handleRelayCommand() เดิม

void handleRelayCommand(char cmd) {
  switch (cmd) {
    case '1': // LED Toggle/On
      status.relay_led = !status.relay_led;  // Toggle state
      digitalWrite(RELAY_LED, status.relay_led ? LOW : HIGH);  // Active LOW relay
      Serial.print(F("[RELAY] LED "));
      Serial.println(status.relay_led ? "ON" : "OFF");
      break;
      
    case '2': // Fan Toggle/On  
      status.relay_fan = !status.relay_fan;  // Toggle state
      digitalWrite(RELAY_FAN, status.relay_fan ? LOW : HIGH);  // Active LOW relay
      Serial.print(F("[RELAY] FAN "));
      Serial.println(status.relay_fan ? "ON" : "OFF");
      break;
      
    case '0': // All Off
      digitalWrite(RELAY_LED, HIGH);   // Active LOW = OFF
      digitalWrite(RELAY_FAN, HIGH);   // Active LOW = OFF
      status.relay_led = false;
      status.relay_fan = false;
      Serial.println(F("[RELAY] ALL OFF"));
      break;
      
    // เพิ่มคำสั่งใหม่สำหรับ explicit ON/OFF
    case '3': // LED OFF (ใหม่)
      digitalWrite(RELAY_LED, HIGH);   // Active LOW = OFF
      status.relay_led = false;
      Serial.println(F("[RELAY] LED OFF"));
      break;
      
    case '4': // FAN OFF (ใหม่)
      digitalWrite(RELAY_FAN, HIGH);   // Active LOW = OFF
      status.relay_fan = false;
      Serial.println(F("[RELAY] FAN OFF"));
      break;
      
    case '5': // LED ON (ใหม่)
      digitalWrite(RELAY_LED, LOW);    // Active LOW = ON
      status.relay_led = true;
      Serial.println(F("[RELAY] LED ON"));
      break;
      
    case '6': // FAN ON (ใหม่)
      digitalWrite(RELAY_FAN, LOW);    // Active LOW = ON
      status.relay_fan = true;
      Serial.println(F("[RELAY] FAN ON"));
      break;
      
    default:
      Serial.print(F("[ERROR] Invalid relay command: R:"));
      Serial.println(cmd);
      Serial.println(F("[HELP] Valid commands: R:1(LED toggle), R:2(FAN toggle), R:0(ALL OFF), R:5(LED ON), R:6(FAN ON), R:3(LED OFF), R:4(FAN OFF)"));
      break;
  }
} 