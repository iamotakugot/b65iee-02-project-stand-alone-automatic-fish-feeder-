#include <HX711.h>  // ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô HX711 ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏à‡∏≤‡∏Å Load Cell
#include <EEPROM.h> // ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥ EEPROM ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ scale ‡πÅ‡∏•‡∏∞ offset ‡∏ñ‡∏≤‡∏ß‡∏£

// ‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö (‡∏ñ‡∏±‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ ‡πÅ‡∏•‡∏∞‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏ä‡∏±‡πà‡∏á)
// ‡∏ñ‡∏±‡∏á 0.865
// 0.865+1.246 2.111
// 2.450


const int LOADCELL_DOUT_PIN = 28;
const int LOADCELL_SCK_PIN = 26;
// const int LOADCELL_DOUT_PIN = 20; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≤ DATA (DT) ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö HX711
// const int LOADCELL_SCK_PIN = 21;  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≤ CLOCK (SCK) ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö HX711
const int EEPROM_SCALE_ADDR = 0;  // ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô EEPROM ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ scaleFactor
const int EEPROM_OFFSET_ADDR = EEPROM_SCALE_ADDR + sizeof(float); // ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ offset ‡∏ï‡πà‡∏≠‡∏à‡∏≤‡∏Å scaleFactor

HX711 scale; // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡∏Å‡∏ï‡πå HX711 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô

String inputString = "";     // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡∏à‡∏≤‡∏Å Serial (‡∏à‡∏≤‡∏Å Web ‡∏´‡∏£‡∏∑‡∏≠ Serial Monitor)
bool inputComplete = false;  // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å Serial ‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß

float knownWeight = 0.0;     // ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏à‡∏£‡∏¥‡∏á (‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏≠‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö)
float scaleFactor = 1.0;     // ‡∏Ñ‡πà‡∏≤ scaleFactor ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

void setup() {
  Serial.begin(9600); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏ú‡πà‡∏≤‡∏ô Serial ‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß 9600
  Serial.println("üìè HX711 Calibration with EEPROM Save");

  scale.begin(LOADCELL_DOUT_PIN, LOADCELL_SCK_PIN); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô HX711 ‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
  scale.set_scale(1.0);  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô scale ‡πÄ‡∏õ‡πá‡∏ô 1 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏≤‡∏î‡∏¥‡∏ö
  scale.tare();          // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏®‡∏π‡∏ô‡∏¢‡πå (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô Load Cell)

  Serial.println("üìå ‡∏ß‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ö‡∏ô Load Cell ‡∏´‡∏•‡∏±‡∏á tare()");
  Serial.println("üí¨ ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏à‡∏£‡∏¥‡∏á (kg) ‡πÄ‡∏ä‡πà‡∏ô 1.0 ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå 'reset' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå EEPROM");
}

void loop() {
  if (inputComplete) { // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏à‡∏≤‡∏Å Serial ‡∏Ñ‡∏£‡∏ö
    inputComplete = false; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    inputString.trim();    // ‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏≠‡∏≠‡∏Å

    if (inputString.equalsIgnoreCase("reset")) { // ‡∏ñ‡πâ‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤ reset
      float zeroF = 0.0;
      long zeroL = 0;
      EEPROM.put(EEPROM_SCALE_ADDR, zeroF);        // ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤ scaleFactor ‡πÉ‡∏ô EEPROM
      EEPROM.put(EEPROM_OFFSET_ADDR, zeroL);       // ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤ offset ‡πÉ‡∏ô EEPROM
      Serial.println("üßπ ‡∏•‡πâ‡∏≤‡∏á EEPROM ‡πÅ‡∏•‡πâ‡∏ß (scaleFactor = 0.0, offset = 0)");
    } else {
      knownWeight = inputString.toFloat();         // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏à‡∏£‡∏¥‡∏á
      float reading = scale.get_value(10);         // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏î‡∏¥‡∏ö‡∏à‡∏≤‡∏Å Load Cell (‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ 10 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á)

      if (knownWeight > 0 && reading != 0) {       // ‡∏ñ‡πâ‡∏≤ input ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        scaleFactor = reading / knownWeight;       // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤ scaleFactor
        long offset = scale.get_offset();          // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ offset ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô

        EEPROM.put(EEPROM_SCALE_ADDR, scaleFactor); // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤ scaleFactor ‡∏•‡∏á EEPROM
        EEPROM.put(EEPROM_OFFSET_ADDR, offset);     // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤ offset ‡∏•‡∏á EEPROM

        Serial.println("‚úÖ Calibration ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:");
        Serial.print("   ‚Ü™ ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏à‡∏£‡∏¥‡∏á: "); Serial.print(knownWeight, 3); Serial.println(" kg");
        Serial.print("   ‚Ü™ ‡∏Ñ‡πà‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡∏î‡∏¥‡∏ö: "); Serial.println(reading, 3);
        Serial.print("   ‚Ü™ scaleFactor: "); Serial.println(scaleFactor, 6);
        Serial.print("   ‚Ü™ offset: "); Serial.println(offset);
        Serial.println("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á EEPROM ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
      } else {
        Serial.println("‚ùå ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ï‡πâ‡∏≠‡∏á > 0 ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏î‡∏¥‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô 0");
      }
    }

    inputString = ""; // ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
  }
}

void serialEvent() {
  while (Serial.available()) {           // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏ó‡∏≤‡∏á Serial
    char inChar = (char)Serial.read();   // ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
    if (inChar == '\n' || inChar == '\r') {
      inputComplete = true;              // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏à‡∏≠ Enter ‡πÉ‡∏´‡πâ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö
    } else {
      inputString += inChar;             // ‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞‡∏ï‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô inputString
    }
  }
}
