// === auger_control.ino ===
// ‚öôÔ∏è ‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏•‡∏µ‡∏¢‡∏ß‡∏•‡∏≥‡πÄ‡∏•‡∏µ‡∏¢‡∏á (Auger) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡πâ‡∏≠‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏õ‡∏•‡∏≤

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏•‡∏µ‡∏¢‡∏ß‡∏•‡∏≥‡πÄ‡∏•‡∏µ‡∏¢‡∏á
#define AUG_ENA 8    // PWM ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß
#define AUG_IN1 9    // ‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏ô‡πâ‡∏≤
#define AUG_IN2 10   // ‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á

// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÇ‡∏´‡∏•‡∏î auger
bool augerUsedLoad = false;
bool freezeBattery = false;
unsigned long augerStopTime = 0;

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏Å‡∏•‡∏µ‡∏¢‡∏ß‡∏•‡∏≥‡πÄ‡∏•‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏≤‡∏Å Serial ===
void handleAugerCommand(char cmd) {
  if (cmd == '1') {
    digitalWrite(AUG_IN1, HIGH);
    digitalWrite(AUG_IN2, LOW);
    analogWrite(AUG_ENA, 200);  // ‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 78%
    augerUsedLoad = true;
    freezeBattery = true;
    augerStopTime = millis();
    Serial.println("Auger ‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏ô‡πâ‡∏≤");
  } 
  else if (cmd == '2') {
    digitalWrite(AUG_IN1, LOW);
    digitalWrite(AUG_IN2, HIGH);
    analogWrite(AUG_ENA, 200);  // ‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á
    augerUsedLoad = true;
    freezeBattery = true;
    augerStopTime = millis();
    Serial.println("Auger ‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á");
  } 
  else if (cmd == '0') {
    analogWrite(AUG_ENA, 0);    // ‡∏´‡∏¢‡∏∏‡∏î PWM
    augerUsedLoad = false;
    freezeBattery = false;
    augerStopTime = millis();
    Serial.println("Auger ‡∏´‡∏¢‡∏∏‡∏î");
  } 
  else if (cmd == '3') {
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡∏ß‡∏ô‡∏•‡∏π‡∏õ
    int speeds[] = {64, 128, 192, 255};
    for (int i = 0; i < 4; i++) {
      analogWrite(AUG_ENA, speeds[i]);
      Serial.print("‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß: ");
      Serial.print((speeds[i] * 100) / 255);
      Serial.println("%");
      delay(1000);
    }
    analogWrite(AUG_ENA, 0);
    Serial.println("‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß");
  }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ PIN ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö auger motor ===
void initAugerControl() {
  pinMode(AUG_ENA, OUTPUT);
  pinMode(AUG_IN1, OUTPUT);
  pinMode(AUG_IN2, OUTPUT);
  analogWrite(AUG_ENA, 0);  // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô setup() ‡πÅ‡∏•‡∏∞ loop() ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ===
void setup() {
  Serial.begin(9600);
  initAugerControl();
  Serial.println("Auger control system ready.");
  Serial.println("Serial control commands:");
  Serial.println("  Press 1 = Run forward");
  Serial.println("  Press 2 = Run backward");
  Serial.println("  Press 0 = Stop auger");
  Serial.println("  Press 3 = Speed test (loop)");
}

void loop() {
  if (Serial.available()) {
    char cmd = Serial.read();
    handleAugerCommand(cmd);
  }
}

/*
üì° ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Web App:
- Web App ‡∏™‡πà‡∏á Serial Command ‡πÄ‡∏ä‡πà‡∏ô "G:1\n", "G:2\n", "G:0\n", "G:3\n"
- Arduino ‡∏ù‡∏±‡πà‡∏á‡∏£‡∏±‡∏ö:
    if (input.startsWith("G:")) {
        char ch = input.charAt(2);
        handleAugerCommand(ch);
    }
*/
