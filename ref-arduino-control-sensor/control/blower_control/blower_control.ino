// === blower_control.ino ===
// üåÄ ‡πÇ‡∏°‡∏î‡∏π‡∏•‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏û‡∏±‡∏î‡∏•‡∏° (Blower) ‡∏î‡πâ‡∏ß‡∏¢ PWM ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏≤‡∏¢‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÉ‡∏ô‡∏ï‡∏π‡πâ‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏ó‡∏£‡∏•

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏û‡∏±‡∏î‡∏•‡∏°‡∏ú‡πà‡∏≤‡∏ô H-Bridge
#define RPWM 5    // PWM ‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏ô‡πâ‡∏≤
#define LPWM 6    // ‡∏≠‡∏µ‡∏Å‡∏ù‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á H-Bridge (‡∏õ‡∏Å‡∏ï‡∏¥‡∏™‡∏±‡πà‡∏á LOW)

int speedLevel = 250;            // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏û‡∏±‡∏î‡∏•‡∏° (0-255)
bool isRunning = false;          // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏û‡∏±‡∏î‡∏•‡∏°
bool freezeBattery = false;      // ‡∏´‡∏¢‡∏∏‡∏î‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
unsigned long blowerStopTime = 0; // ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏¢‡∏∏‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏û‡∏±‡∏î‡∏•‡∏°‡∏à‡∏≤‡∏Å Serial Command ===
void handleBlowerCommand(char cmd) {
  if (cmd == '1') {
    analogWrite(RPWM, speedLevel);   // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏≥‡∏´‡∏ô‡∏î
    digitalWrite(LPWM, LOW);         // ‡∏õ‡∏¥‡∏î‡∏ù‡∏±‡πà‡∏á‡∏ï‡∏£‡∏á‡∏Ç‡πâ‡∏≤‡∏°
    isRunning = true;
    freezeBattery = true;
    blowerStopTime = millis();
    Serial.print("‡∏û‡∏±‡∏î‡∏•‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß ");
    Serial.println(speedLevel);
  } 
  else if (cmd == '2') {
    analogWrite(RPWM, 0);            // ‡∏´‡∏¢‡∏∏‡∏î PWM
    isRunning = false;
    freezeBattery = false;
    blowerStopTime = millis();
    Serial.println("‡∏û‡∏±‡∏î‡∏•‡∏°‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô");
  }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≤‡∏û‡∏±‡∏î‡∏•‡∏° ===
void initBlowerControl() {
  pinMode(RPWM, OUTPUT);
  pinMode(LPWM, OUTPUT);
  analogWrite(RPWM, 0);
  digitalWrite(LPWM, LOW);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô setup() ‡πÅ‡∏•‡∏∞ loop() ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ===
void setup() {
  Serial.begin(9600);
  initBlowerControl();
  Serial.println("Blower control system ready.");
  Serial.println("Serial control commands:");
  Serial.println("  Press 1 = Turn ON fan");
  Serial.println("  Press 2 = Turn OFF fan");
}

void loop() {
  if (Serial.available()) {
    char cmd = Serial.read();
    handleBlowerCommand(cmd);
  }
}

/*
üì° ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Web App:
- Web App ‡∏™‡πà‡∏á Serial Command ‡πÄ‡∏ä‡πà‡∏ô "B:1\n", "B:2\n"
- Arduino ‡∏ù‡∏±‡πà‡∏á‡∏£‡∏±‡∏ö:
    if (input.startsWith("B:")) {
        char ch = input.charAt(2);
        handleBlowerCommand(ch);
    }
*/
